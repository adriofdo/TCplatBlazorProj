@page "/"
@namespace System.Diagnostics
@using SQLDatAccessLibrary.Login
@inject NavigationManager Navigation
@inject ILoginData loginData

<RadzenRow Gap="0" Class="rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 800px; overflow: hidden;">
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-text-align-center rz-p-12" Style="height: 100%; background: var(--rz-primary-light) no-repeat 100% 70% fixed;">
            <RadzenStack AlignItems="AlignItems.Center" Class="rz-mx-auto rz-my-12">
                <RadzenImage Path="images/Logo_tutticolori.png" Style="width: 15rem;" AlternateText="Community Logo" />
            </RadzenStack>
            <RadzenText TextStyle="TextStyle.DisplayH3" TagName="TagName.H2" Class="rz-color-white rz-mb-6">Benvenuti!</RadzenText>
            <RadzenText TextStyle="TextStyle.H6" Class="rz-color-white">Iniziamo con l'autenticazione!</RadzenText>
            <RadzenText TextStyle="TextStyle.Body2" Class="rz-color-white">Inserisci i credenziali</RadzenText>
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
            <RadzenTemplateForm Data=@("LoginWithDefaultValues")>
                <RadzenLogin AllowRegister="true" AllowResetPassword="true" Username=@userName Password=@password
                             AllowRememberMe="true" RememberMe=@rememberMe
                             Login=@(args => OnLogin(args, "Login with default values"))
                             Register=@(args => OnRegister("Login with default values")) />
            </RadzenTemplateForm>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<EventConsole @ref="console" />

@code {
    string userName = "admin";
    string password = "admin";
    bool rememberMe = true;

    EventConsole console;

    async Task OnLogin(LoginArgs args, string name)
    {
        int loginResult = await loginData.ValidateLoginAsync(args.Username, args.Password);

        if (loginResult > 0)
        {
            console.Log($"{name} -> Successful login for user: {args.Username}");
            Navigation.NavigateTo("/anagrafici");
        }
        else
        {
            console.Log($"{name} -> Failed login attempt for user: {args.Username}");
        }
    }

    void OnRegister(string name)
    {
        console.Log($"{name} -> Register");
        Navigation.NavigateTo("/registrazione");
    }

    void OnResetPassword(LoginArgs args, string name)
    {
        console.Log($"{name} -> ResetPassword for user: {args.Username}");
    }
}
